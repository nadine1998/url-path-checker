using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CheckPath
{
    public class ListVulnerability : List<Vulnerability>
    {
        private List<Vulnerability> vulnerabilities;

        public List<Vulnerability> Lstvulnerabilities() { 
            return this.vulnerabilities;
        }
        public ListVulnerability() {
            vulnerabilities = new List<Vulnerability>();
        }

        public void addVulnerability(Vulnerability vulnerability)
        {
            vulnerabilities.Add(vulnerability);
        }

        public int Taille()
        {
            return this.vulnerabilities.Count;
        }

        public void GenerateTextReport(string outputFilePath)
        {

            using (StreamWriter writer = new StreamWriter(outputFilePath))
            {
                writer.WriteLine("**Rapport de Vulnérabilités** \n");

                if (this.vulnerabilities.Count > 0)
                {
                    int index = 1;
                    writer.WriteLine("** Nombre de routes potentiellement vulnérables ** : " + vulnerabilities.Count.ToString() + "\n");
                    writer.WriteLine("** Liste des routes potentiellement vulnérables ** :  \n");
                    foreach (Vulnerability vulnerability in vulnerabilities)
                    {
                        writer.WriteLine("\t " +index + " - " + vulnerability.ToString());
                        index++;
                    }
                }
                else
                {
                    writer.WriteLine("**Aucune vulnérabilité n'a été trouvée.**");
                }
                MessageBox.Show("Le rapport texte a été généré avec succès : " + outputFilePath, "Opération terminée");
            }
        }

    }
}
